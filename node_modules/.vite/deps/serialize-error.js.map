{
  "version": 3,
  "sources": ["../../serialize-error/index.js"],
  "sourcesContent": ["'use strict';\n\nclass NonError extends Error {\n\tconstructor(message) {\n\t\tsuper(NonError._prepareSuperMessage(message));\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tvalue: 'NonError',\n\t\t\tconfigurable: true,\n\t\t\twritable: true\n\t\t});\n\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, NonError);\n\t\t}\n\t}\n\n\tstatic _prepareSuperMessage(message) {\n\t\ttry {\n\t\t\treturn JSON.stringify(message);\n\t\t} catch {\n\t\t\treturn String(message);\n\t\t}\n\t}\n}\n\nconst commonProperties = [\n\t{property: 'name', enumerable: false},\n\t{property: 'message', enumerable: false},\n\t{property: 'stack', enumerable: false},\n\t{property: 'code', enumerable: true}\n];\n\nconst isCalled = Symbol('.toJSON called');\n\nconst toJSON = from => {\n\tfrom[isCalled] = true;\n\tconst json = from.toJSON();\n\tdelete from[isCalled];\n\treturn json;\n};\n\nconst destroyCircular = ({\n\tfrom,\n\tseen,\n\tto_,\n\tforceEnumerable,\n\tmaxDepth,\n\tdepth\n}) => {\n\tconst to = to_ || (Array.isArray(from) ? [] : {});\n\n\tseen.push(from);\n\n\tif (depth >= maxDepth) {\n\t\treturn to;\n\t}\n\n\tif (typeof from.toJSON === 'function' && from[isCalled] !== true) {\n\t\treturn toJSON(from);\n\t}\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (typeof Buffer === 'function' && Buffer.isBuffer(value)) {\n\t\t\tto[key] = '[object Buffer]';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\tto[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tdepth++;\n\n\t\t\tto[key] = destroyCircular({\n\t\t\t\tfrom: from[key],\n\t\t\t\tseen: seen.slice(),\n\t\t\t\tforceEnumerable,\n\t\t\t\tmaxDepth,\n\t\t\t\tdepth\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tfor (const {property, enumerable} of commonProperties) {\n\t\tif (typeof from[property] === 'string') {\n\t\t\tObject.defineProperty(to, property, {\n\t\t\t\tvalue: from[property],\n\t\t\t\tenumerable: forceEnumerable ? true : enumerable,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t}\n\n\treturn to;\n};\n\nconst serializeError = (value, options = {}) => {\n\tconst {maxDepth = Number.POSITIVE_INFINITY} = options;\n\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tforceEnumerable: true,\n\t\t\tmaxDepth,\n\t\t\tdepth: 0\n\t\t});\n\t}\n\n\t// People sometimes throw things besides Error objectsâ€¦\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\treturn `[Function: ${(value.name || 'anonymous')}]`;\n\t}\n\n\treturn value;\n};\n\nconst deserializeError = (value, options = {}) => {\n\tconst {maxDepth = Number.POSITIVE_INFINITY} = options;\n\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n\t\tconst newError = new Error(); // eslint-disable-line unicorn/error-message\n\t\tdestroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tto_: newError,\n\t\t\tmaxDepth,\n\t\t\tdepth: 0\n\t\t});\n\t\treturn newError;\n\t}\n\n\treturn new NonError(value);\n};\n\nmodule.exports = {\n\tserializeError,\n\tdeserializeError\n};\n"],
  "mappings": "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",
  "names": []
}
